{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css"],"names":["module","exports","Header","to","Message","props","className","m","item","message","src","avatar","alt","message__background","author","name","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","someClass","hw3Wrapper","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","style","backgroundColor","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","JuniorPlus","SuperSelect","options","onChangeOption","mappedOptions","op","SuperRadio","o","i","arr","HW7","homeWorkReducer","action","copyState","el","age","payload","sort","b","initialPeople","HW8","people","setPeople","finalPeople","p","Junior","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cb7f1121.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3SB9o\",\"error\":\"Greeting_error__3dVbz\",\"hw3Wrapper\":\"Greeting_hw3Wrapper__2uK2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__35sRC\",\"errorInput\":\"SuperInputText_errorInput__2VOrN\",\"error\":\"SuperInputText_error__XoFgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__Mji9u\",\"column\":\"HW4_column__26ydC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1wxiA\",\"red\":\"SuperButton_red__1tkla\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3yozp\",\"spanClassName\":\"SuperCheckbox_spanClassName__1c3Sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3GRQb\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header () {\n    return (\n        <div>\n            //add NavLinks\n            <NavLink to={'/junior'}>JUN </NavLink>\n            <NavLink to={'/junior-plus'}>JUN+ </NavLink>\n            <NavLink to={'/pre-junior'}>PREJUN</NavLink>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport m from \"./Message.module.css\";\n\n\ntype MessageTypes = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageTypes) {\n    return (\n        <div>\n            <div className={m.item}>\n                <div className={m.message}>\n                    <img src={props.avatar} alt=\"\"/>\n                    <div className={m.message__background}>\n                        <p className={m.author}>{props.name}</p>\n                        <div>\n                            <p>{props.message}\n                                <span className={m.time}>{props.time}</span>\n                            </p>\n\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div>\n            {props.affair.name}  {\" \"}\n             {props.affair.priority}\n\n            {\" \"}<button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }; // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}; // need to fix any\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === \"all\") return affairs;\n    else return affairs.filter(a => {\n        return a.priority === filter\n    }); // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(a => {\n        return a._id !== _id\n    }); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = name === \"\" ?  s.error : s.someClass; // need to fix with (?:)\n\n    return (\n        <div className={s.hw3Wrapper}>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>Общее количество User's {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value); // need to fix\n\n    };\n    const addUser = () => {\n        if (name === \"\" || name === \" \") {\n            setError(\"Нужно ввести имя\")\n        } else {\n            addUserCallback(name);\n            alert(`Hello ${name} !` )\n            setError(\"\")\n            setName(\"\")\n        }\n\n    } // need to fix\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users,{_id: v1(), name: name}]); // need to fix\n\n    }\n    return (\n        <div style={{backgroundColor: \"#9deded\"}}>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${!error ? className : \"\"}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <div className={s.spanClassName}>{children}</div>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        // setEditMode(); // выключить editMode при нажатии Enter\n        setEditMode(false)\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        // setValue();\n        let text = restoreState(\"editable-span-value\",\"\")\n        setValue(text)\n    };\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            {/*<HW6/>*/}\r\n            JUNIOR+\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавлятьс","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport {v1} from \"uuid\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options ? options.map(op => <option key={v1()} value={op}>{op}</option>): []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                value={o}\n                name = {name}\n                checked={value === o}\n                onChange={onChangeCallback}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","export const homeWorkReducer = (state: any, action: any): any => {\n    let copyState = state.map((el: any) => {\n        return {_id: el._id, name: el.name, age: el.age}\n    })\n    switch(action.type) {\n        case \"sort\": {\n            if(action.payload === \"up\") {\n                copyState.sort((a: any, b: any) => a.name > b.name ? 1 : -1)\n                return copyState\n            }\n            if(action.payload === \"down\") {\n                copyState.sort((a: any, b: any) => b.name > a.name ? 1 : -1)\n                return copyState\n            }\n            return state\n        }\n        case \"check\": {\n            const checkState = copyState.filter((el: any) => el.age > action.payload)\n            return checkState\n        }\n        default:\n            return state\n    }\n};","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            {p.name}, {p.age}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\n    const checkAge = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={checkAge}>check 18</SuperButton></div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React from \"react\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            JUNIOR\r\n            <HW7/>\r\n            <HW8/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавлятьс","import React from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport Junior from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nfunction Routes () {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                // add routes\n\n                <Route path={PATH.JUNIOR_PLUS} render = {() => <JuniorPlus/>}/>\n                <Route path={PATH.JUNIOR} render = {() => <Junior/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW5/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__5j_LX\",\"message\":\"Message_message__3DNCs\",\"time\":\"Message_time__3bawi\",\"message__background\":\"Message_message__background__R1FWx\",\"author\":\"Message_author__2jymM\"};"],"sourceRoot":""}